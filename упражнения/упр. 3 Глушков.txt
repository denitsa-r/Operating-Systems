$chown <user>:<group> file - промяна на правата на собственика 

Права за достъп 
d - directory 
l - symlink

типове права:
rwx - read, write, execute 
по една такава тройка за user, group, other 
тип битчета 101 - 5 111 - 7 000 - 0
7 - всички права 
5 - четене и изпълняване 
0 - нито едно право 

права за директория:
r - можем да видим какво има в директория 
w - можем да добавим файл в директорията
x - можем да се позиционираме вътре в директорията

$umask - кои права да нямаме по подразбиране като създаваме файл 

$chmod u=rwx - задава тезо права конкретно 
$chmod u+x - добавя тези права
$chmod u-rw - премахва тези права 

$chmod u=,g=,o= - u==user, g==group, o==other
$chmod a==all

$chmod -R - рекурсивно задава права на всички поддиректории/файловете

Специални битове - казват как да се държи програмата като бъде изпълнявана
UID bit - собственика на процеса който изпълнява файла е авторът на процеса който изпълняваме
GID bit - като изпълним файла групата собственик на процеса е същата като тази на файла 
StickyBit - 

!Важен пример: 
имаме hardlink към файл от директорията на която сме премахнали всички права
    - линка няма нищо общо с директорията, тоест можем да си го достъпим <3
    - линка си е отделен файл 

find 
---------------------------             ----------                    ----------------------------
| как да обходя файловете |------------>| филтри |------------------>| какво да правя файловете  |
---------------------------             ----------                    ----------------------------
какво ще правим със симлинковете        | -type                       | -print 
- следваме                              | -name                       | -delete
- по дефолт не ги следваме              | и тн.                       | -ls - трябва ни защото можем да филтрираме
                                                                      | -exec <command> \; - за този файл направи това което ти подавам. В контекста на exec '{}' означава текущия файл


$find <name> <filter1> -o <filter2> - или 
може да обединяваме филтри 
$find <name> '(<filter1> <filter2>)' -o <filter2> - или 
-not - отрицание на филтрите 




